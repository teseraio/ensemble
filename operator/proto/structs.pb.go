// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.0
// source: operator/proto/structs.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Component_Status int32

const (
	Component_UNKNOWN  Component_Status = 0
	Component_PENDING  Component_Status = 1
	Component_QUEUED   Component_Status = 2
	Component_FAILED   Component_Status = 3
	Component_APPLIED  Component_Status = 4
	Component_CANCELED Component_Status = 5
	Component_BLOCKED  Component_Status = 6 // Before pending
)

// Enum value maps for Component_Status.
var (
	Component_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "QUEUED",
		3: "FAILED",
		4: "APPLIED",
		5: "CANCELED",
		6: "BLOCKED",
	}
	Component_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"PENDING":  1,
		"QUEUED":   2,
		"FAILED":   3,
		"APPLIED":  4,
		"CANCELED": 5,
		"BLOCKED":  6,
	}
)

func (x Component_Status) Enum() *Component_Status {
	p := new(Component_Status)
	*p = x
	return p
}

func (x Component_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Component_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_structs_proto_enumTypes[0].Descriptor()
}

func (Component_Status) Type() protoreflect.EnumType {
	return &file_operator_proto_structs_proto_enumTypes[0]
}

func (x Component_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Component_Status.Descriptor instead.
func (Component_Status) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{10, 0}
}

type Component_Action int32

const (
	Component_CREATE Component_Action = 0
	Component_DELETE Component_Action = 1
)

// Enum value maps for Component_Action.
var (
	Component_Action_name = map[int32]string{
		0: "CREATE",
		1: "DELETE",
	}
	Component_Action_value = map[string]int32{
		"CREATE": 0,
		"DELETE": 1,
	}
)

func (x Component_Action) Enum() *Component_Action {
	p := new(Component_Action)
	*p = x
	return p
}

func (x Component_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Component_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_structs_proto_enumTypes[1].Descriptor()
}

func (Component_Action) Type() protoreflect.EnumType {
	return &file_operator_proto_structs_proto_enumTypes[1]
}

func (x Component_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Component_Action.Descriptor instead.
func (Component_Action) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{10, 1}
}

type Instance_Status int32

const (
	Instance_UNKNOWN   Instance_Status = 0
	Instance_OUT       Instance_Status = 1 // an old instance of the ensemble
	Instance_PENDING   Instance_Status = 2 // pending on the Provider to be created
	Instance_SCHEDULED Instance_Status = 3 // the instance is being created
	Instance_RUNNING   Instance_Status = 4 // the instance is running
	Instance_TAINTED   Instance_Status = 5 // the instance is tainted and ready to be stopped
	Instance_FAILED    Instance_Status = 6 // the instance has stopped with a failure
	Instance_STOPPED   Instance_Status = 7 // the instance is stopped
)

// Enum value maps for Instance_Status.
var (
	Instance_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "OUT",
		2: "PENDING",
		3: "SCHEDULED",
		4: "RUNNING",
		5: "TAINTED",
		6: "FAILED",
		7: "STOPPED",
	}
	Instance_Status_value = map[string]int32{
		"UNKNOWN":   0,
		"OUT":       1,
		"PENDING":   2,
		"SCHEDULED": 3,
		"RUNNING":   4,
		"TAINTED":   5,
		"FAILED":    6,
		"STOPPED":   7,
	}
)

func (x Instance_Status) Enum() *Instance_Status {
	p := new(Instance_Status)
	*p = x
	return p
}

func (x Instance_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Instance_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_structs_proto_enumTypes[2].Descriptor()
}

func (Instance_Status) Type() protoreflect.EnumType {
	return &file_operator_proto_structs_proto_enumTypes[2]
}

func (x Instance_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Instance_Status.Descriptor instead.
func (Instance_Status) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{18, 0}
}

type Evaluation_Status int32

const (
	Evaluation_PENDING   Evaluation_Status = 0
	Evaluation_COMPLETE  Evaluation_Status = 1
	Evaluation_FAILED    Evaluation_Status = 2
	Evaluation_CANCELLED Evaluation_Status = 3
)

// Enum value maps for Evaluation_Status.
var (
	Evaluation_Status_name = map[int32]string{
		0: "PENDING",
		1: "COMPLETE",
		2: "FAILED",
		3: "CANCELLED",
	}
	Evaluation_Status_value = map[string]int32{
		"PENDING":   0,
		"COMPLETE":  1,
		"FAILED":    2,
		"CANCELLED": 3,
	}
)

func (x Evaluation_Status) Enum() *Evaluation_Status {
	p := new(Evaluation_Status)
	*p = x
	return p
}

func (x Evaluation_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Evaluation_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_structs_proto_enumTypes[3].Descriptor()
}

func (Evaluation_Status) Type() protoreflect.EnumType {
	return &file_operator_proto_structs_proto_enumTypes[3]
}

func (x Evaluation_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Evaluation_Status.Descriptor instead.
func (Evaluation_Status) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{19, 0}
}

type Evaluation_Trigger int32

const (
	Evaluation_UNKNOWN    Evaluation_Trigger = 0
	Evaluation_SPECCHANGE Evaluation_Trigger = 1
	Evaluation_NODECHANGE Evaluation_Trigger = 2
)

// Enum value maps for Evaluation_Trigger.
var (
	Evaluation_Trigger_name = map[int32]string{
		0: "UNKNOWN",
		1: "SPECCHANGE",
		2: "NODECHANGE",
	}
	Evaluation_Trigger_value = map[string]int32{
		"UNKNOWN":    0,
		"SPECCHANGE": 1,
		"NODECHANGE": 2,
	}
)

func (x Evaluation_Trigger) Enum() *Evaluation_Trigger {
	p := new(Evaluation_Trigger)
	*p = x
	return p
}

func (x Evaluation_Trigger) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Evaluation_Trigger) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_structs_proto_enumTypes[4].Descriptor()
}

func (Evaluation_Trigger) Type() protoreflect.EnumType {
	return &file_operator_proto_structs_proto_enumTypes[4]
}

func (x Evaluation_Trigger) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Evaluation_Trigger.Descriptor instead.
func (Evaluation_Trigger) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{19, 1}
}

type ListDeploymentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []*Deployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
}

func (x *ListDeploymentsResp) Reset() {
	*x = ListDeploymentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeploymentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentsResp) ProtoMessage() {}

func (x *ListDeploymentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentsResp.ProtoReflect.Descriptor instead.
func (*ListDeploymentsResp) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{0}
}

func (x *ListDeploymentsResp) GetDeployments() []*Deployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

type GetDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetDeploymentReq) Reset() {
	*x = GetDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentReq) ProtoMessage() {}

func (x *GetDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentReq.ProtoReflect.Descriptor instead.
func (*GetDeploymentReq) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{1}
}

func (x *GetDeploymentReq) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type GetDeploymentByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeploymentByIDReq) Reset() {
	*x = GetDeploymentByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentByIDReq) ProtoMessage() {}

func (x *GetDeploymentByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentByIDReq.ProtoReflect.Descriptor instead.
func (*GetDeploymentByIDReq) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{2}
}

func (x *GetDeploymentByIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeploymentByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
}

func (x *GetDeploymentByIDResp) Reset() {
	*x = GetDeploymentByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentByIDResp) ProtoMessage() {}

func (x *GetDeploymentByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentByIDResp.ProtoReflect.Descriptor instead.
func (*GetDeploymentByIDResp) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeploymentByIDResp) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type UpsertInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *Instance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *UpsertInstanceReq) Reset() {
	*x = UpsertInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertInstanceReq) ProtoMessage() {}

func (x *UpsertInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertInstanceReq.ProtoReflect.Descriptor instead.
func (*UpsertInstanceReq) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertInstanceReq) GetInstance() *Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type UpsertInstanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpsertInstanceResp) Reset() {
	*x = UpsertInstanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertInstanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertInstanceResp) ProtoMessage() {}

func (x *UpsertInstanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertInstanceResp.ProtoReflect.Descriptor instead.
func (*UpsertInstanceResp) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{5}
}

type GetInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetInstanceReq) Reset() {
	*x = GetInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceReq) ProtoMessage() {}

func (x *GetInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceReq.ProtoReflect.Descriptor instead.
func (*GetInstanceReq) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{6}
}

func (x *GetInstanceReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetInstanceReq) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type GetInstanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *Instance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *GetInstanceResp) Reset() {
	*x = GetInstanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceResp) ProtoMessage() {}

func (x *GetInstanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceResp.ProtoReflect.Descriptor instead.
func (*GetInstanceResp) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{7}
}

func (x *GetInstanceResp) GetInstance() *Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type GetInstanceUpdatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetInstanceUpdatesResp) Reset() {
	*x = GetInstanceUpdatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceUpdatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceUpdatesResp) ProtoMessage() {}

func (x *GetInstanceUpdatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceUpdatesResp.ProtoReflect.Descriptor instead.
func (*GetInstanceUpdatesResp) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{8}
}

func (x *GetInstanceUpdatesResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetInstanceUpdatesResp) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

// Task is a task received from the state
type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the cluster
	DeploymentID string `protobuf:"bytes,1,opt,name=deploymentID,proto3" json:"deploymentID,omitempty"`
	// Reference to the resource
	ComponentID string `protobuf:"bytes,2,opt,name=componentID,proto3" json:"componentID,omitempty"`
	// Number of the sequence
	Sequence int64 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{9}
}

func (x *Task) GetDeploymentID() string {
	if x != nil {
		return x.DeploymentID
	}
	return ""
}

func (x *Task) GetComponentID() string {
	if x != nil {
		return x.ComponentID
	}
	return ""
}

func (x *Task) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// Component is like a snapshot or something. AKA Evaluation
type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the component
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name is the name of the component
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// spec of the stuff being applied
	Spec *any.Any `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	// generation of the component
	Sequence int64 `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// status of the component
	Status Component_Status `protobuf:"varint,5,opt,name=status,proto3,enum=proto.Component_Status" json:"status,omitempty"`
	// Type of action
	Action Component_Action `protobuf:"varint,6,opt,name=action,proto3,enum=proto.Component_Action" json:"action,omitempty"`
	// timestamp
	Timestamp *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	// metadata of the component
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PrevId   string            `protobuf:"bytes,9,opt,name=prevId,proto3" json:"prevId,omitempty"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{10}
}

func (x *Component) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Component) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Component) GetSpec() *any.Any {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Component) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Component) GetStatus() Component_Status {
	if x != nil {
		return x.Status
	}
	return Component_UNKNOWN
}

func (x *Component) GetAction() Component_Action {
	if x != nil {
		return x.Action
	}
	return Component_CREATE
}

func (x *Component) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Component) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Component) GetPrevId() string {
	if x != nil {
		return x.PrevId
	}
	return ""
}

// Description of the cluster
type ClusterSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the backend
	Backend string `protobuf:"bytes,2,opt,name=backend,proto3" json:"backend,omitempty"`
	// version of the backend (RESERVED)
	Version   string               `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Groups    []*ClusterSpec_Group `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	Sequence  int64                `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	DependsOn []string             `protobuf:"bytes,6,rep,name=dependsOn,proto3" json:"dependsOn,omitempty"`
}

func (x *ClusterSpec) Reset() {
	*x = ClusterSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec) ProtoMessage() {}

func (x *ClusterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSpec.ProtoReflect.Descriptor instead.
func (*ClusterSpec) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{11}
}

func (x *ClusterSpec) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *ClusterSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ClusterSpec) GetGroups() []*ClusterSpec_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ClusterSpec) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *ClusterSpec) GetDependsOn() []string {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

// Description of the resource
type ResourceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the cluster
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// name of the resource in the backend
	Resource string `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// params are the params to configure the resource (in JSON)
	Params *Spec `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *ResourceSpec) Reset() {
	*x = ResourceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSpec) ProtoMessage() {}

func (x *ResourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSpec.ProtoReflect.Descriptor instead.
func (*ResourceSpec) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{12}
}

func (x *ResourceSpec) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ResourceSpec) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ResourceSpec) GetParams() *Spec {
	if x != nil {
		return x.Params
	}
	return nil
}

type Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Block:
	//	*Spec_BlockValue
	//	*Spec_Literal_
	//	*Spec_Array_
	Block isSpec_Block `protobuf_oneof:"block"`
}

func (x *Spec) Reset() {
	*x = Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec) ProtoMessage() {}

func (x *Spec) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec.ProtoReflect.Descriptor instead.
func (*Spec) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{13}
}

func (m *Spec) GetBlock() isSpec_Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (x *Spec) GetBlockValue() *Spec_Block {
	if x, ok := x.GetBlock().(*Spec_BlockValue); ok {
		return x.BlockValue
	}
	return nil
}

func (x *Spec) GetLiteral() *Spec_Literal {
	if x, ok := x.GetBlock().(*Spec_Literal_); ok {
		return x.Literal
	}
	return nil
}

func (x *Spec) GetArray() *Spec_Array {
	if x, ok := x.GetBlock().(*Spec_Array_); ok {
		return x.Array
	}
	return nil
}

type isSpec_Block interface {
	isSpec_Block()
}

type Spec_BlockValue struct {
	BlockValue *Spec_Block `protobuf:"bytes,1,opt,name=block_value,json=blockValue,proto3,oneof"`
}

type Spec_Literal_ struct {
	Literal *Spec_Literal `protobuf:"bytes,2,opt,name=literal,proto3,oneof"`
}

type Spec_Array_ struct {
	Array *Spec_Array `protobuf:"bytes,3,opt,name=array,proto3,oneof"`
}

func (*Spec_BlockValue) isSpec_Block() {}

func (*Spec_Literal_) isSpec_Block() {}

func (*Spec_Array_) isSpec_Block() {}

type NodeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env   map[string]string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Files []*NodeSpec_File  `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	Args  []string          `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
	Cmd   string            `protobuf:"bytes,6,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *NodeSpec) Reset() {
	*x = NodeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSpec) ProtoMessage() {}

func (x *NodeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSpec.ProtoReflect.Descriptor instead.
func (*NodeSpec) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{14}
}

func (x *NodeSpec) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *NodeSpec) GetFiles() []*NodeSpec_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *NodeSpec) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *NodeSpec) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

// Deployment describes the current state of the cluster
type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Instances []*Instance `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
	Status    string      `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// sequence applied for this deployment
	Sequence  int64  `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Backend   string `protobuf:"bytes,5,opt,name=backend,proto3" json:"backend,omitempty"`
	CompId    string `protobuf:"bytes,6,opt,name=compId,proto3" json:"compId,omitempty"`
	DnsSuffix string `protobuf:"bytes,7,opt,name=dnsSuffix,proto3" json:"dnsSuffix,omitempty"`
	Id        string `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{15}
}

func (x *Deployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Deployment) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *Deployment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Deployment) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Deployment) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *Deployment) GetCompId() string {
	if x != nil {
		return x.CompId
	}
	return ""
}

func (x *Deployment) GetDnsSuffix() string {
	if x != nil {
		return x.DnsSuffix
	}
	return ""
}

func (x *Deployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InstanceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ClusterName string `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	// Types that are assignable to Event:
	//	*InstanceUpdate_Scheduled_
	//	*InstanceUpdate_Running_
	//	*InstanceUpdate_Killing_
	//	*InstanceUpdate_Failed_
	//	*InstanceUpdate_Healthy_
	Event isInstanceUpdate_Event `protobuf_oneof:"event"`
}

func (x *InstanceUpdate) Reset() {
	*x = InstanceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceUpdate) ProtoMessage() {}

func (x *InstanceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceUpdate.ProtoReflect.Descriptor instead.
func (*InstanceUpdate) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{16}
}

func (x *InstanceUpdate) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *InstanceUpdate) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (m *InstanceUpdate) GetEvent() isInstanceUpdate_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *InstanceUpdate) GetScheduled() *InstanceUpdate_Scheduled {
	if x, ok := x.GetEvent().(*InstanceUpdate_Scheduled_); ok {
		return x.Scheduled
	}
	return nil
}

func (x *InstanceUpdate) GetRunning() *InstanceUpdate_Running {
	if x, ok := x.GetEvent().(*InstanceUpdate_Running_); ok {
		return x.Running
	}
	return nil
}

func (x *InstanceUpdate) GetKilling() *InstanceUpdate_Killing {
	if x, ok := x.GetEvent().(*InstanceUpdate_Killing_); ok {
		return x.Killing
	}
	return nil
}

func (x *InstanceUpdate) GetFailed() *InstanceUpdate_Failed {
	if x, ok := x.GetEvent().(*InstanceUpdate_Failed_); ok {
		return x.Failed
	}
	return nil
}

func (x *InstanceUpdate) GetHealthy() *InstanceUpdate_Healthy {
	if x, ok := x.GetEvent().(*InstanceUpdate_Healthy_); ok {
		return x.Healthy
	}
	return nil
}

type isInstanceUpdate_Event interface {
	isInstanceUpdate_Event()
}

type InstanceUpdate_Scheduled_ struct {
	Scheduled *InstanceUpdate_Scheduled `protobuf:"bytes,3,opt,name=scheduled,proto3,oneof"`
}

type InstanceUpdate_Running_ struct {
	Running *InstanceUpdate_Running `protobuf:"bytes,4,opt,name=running,proto3,oneof"`
}

type InstanceUpdate_Killing_ struct {
	Killing *InstanceUpdate_Killing `protobuf:"bytes,5,opt,name=killing,proto3,oneof"`
}

type InstanceUpdate_Failed_ struct {
	Failed *InstanceUpdate_Failed `protobuf:"bytes,6,opt,name=failed,proto3,oneof"`
}

type InstanceUpdate_Healthy_ struct {
	Healthy *InstanceUpdate_Healthy `protobuf:"bytes,7,opt,name=healthy,proto3,oneof"`
}

func (*InstanceUpdate_Scheduled_) isInstanceUpdate_Event() {}

func (*InstanceUpdate_Running_) isInstanceUpdate_Event() {}

func (*InstanceUpdate_Killing_) isInstanceUpdate_Event() {}

func (*InstanceUpdate_Failed_) isInstanceUpdate_Event() {}

func (*InstanceUpdate_Healthy_) isInstanceUpdate_Event() {}

// Plan after a reconcile
type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvalID     string       `protobuf:"bytes,1,opt,name=evalID,proto3" json:"evalID,omitempty"`
	Cluster    *ClusterSpec `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Deployment *Deployment  `protobuf:"bytes,3,opt,name=deployment,proto3" json:"deployment,omitempty"`
	NodeUpdate []*Instance  `protobuf:"bytes,4,rep,name=nodeUpdate,proto3" json:"nodeUpdate,omitempty"`
	Status     string       `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Done       bool         `protobuf:"varint,7,opt,name=done,proto3" json:"done,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{17}
}

func (x *Plan) GetEvalID() string {
	if x != nil {
		return x.EvalID
	}
	return ""
}

func (x *Plan) GetCluster() *ClusterSpec {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *Plan) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *Plan) GetNodeUpdate() []*Instance {
	if x != nil {
		return x.NodeUpdate
	}
	return nil
}

func (x *Plan) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Plan) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

// Instance represents a node in the Ensemble
type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Namespace   string             `protobuf:"bytes,3,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	ClusterName string             `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Group       *ClusterSpec_Group `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	KV          map[string]string  `protobuf:"bytes,6,rep,name=KV,proto3" json:"KV,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec        *NodeSpec          `protobuf:"bytes,7,opt,name=spec,proto3" json:"spec,omitempty"`
	Status      Instance_Status    `protobuf:"varint,8,opt,name=status,proto3,enum=proto.Instance_Status" json:"status,omitempty"`
	Canary      bool               `protobuf:"varint,9,opt,name=canary,proto3" json:"canary,omitempty"`
	Healthy     bool               `protobuf:"varint,10,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Count       int64              `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
	Ip          string             `protobuf:"bytes,12,opt,name=ip,proto3" json:"ip,omitempty"`
	// previous instance if this is replacing another one
	Prev         string               `protobuf:"bytes,13,opt,name=prev,proto3" json:"prev,omitempty"`
	Handler      string               `protobuf:"bytes,14,opt,name=handler,proto3" json:"handler,omitempty"`
	Sequence     int64                `protobuf:"varint,15,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Reschedule   *Instance_Reschedule `protobuf:"bytes,16,opt,name=reschedule,proto3" json:"reschedule,omitempty"`
	Image        string               `protobuf:"bytes,17,opt,name=image,proto3" json:"image,omitempty"`
	Version      string               `protobuf:"bytes,18,opt,name=version,proto3" json:"version,omitempty"`
	DnsSuffix    string               `protobuf:"bytes,19,opt,name=dnsSuffix,proto3" json:"dnsSuffix,omitempty"`
	DeploymentID string               `protobuf:"bytes,20,opt,name=deploymentID,proto3" json:"deploymentID,omitempty"`
	Mounts       []*Instance_Mount    `protobuf:"bytes,30,rep,name=mounts,proto3" json:"mounts,omitempty"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{18}
}

func (x *Instance) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Instance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instance) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Instance) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Instance) GetGroup() *ClusterSpec_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Instance) GetKV() map[string]string {
	if x != nil {
		return x.KV
	}
	return nil
}

func (x *Instance) GetSpec() *NodeSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Instance) GetStatus() Instance_Status {
	if x != nil {
		return x.Status
	}
	return Instance_UNKNOWN
}

func (x *Instance) GetCanary() bool {
	if x != nil {
		return x.Canary
	}
	return false
}

func (x *Instance) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *Instance) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Instance) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Instance) GetPrev() string {
	if x != nil {
		return x.Prev
	}
	return ""
}

func (x *Instance) GetHandler() string {
	if x != nil {
		return x.Handler
	}
	return ""
}

func (x *Instance) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Instance) GetReschedule() *Instance_Reschedule {
	if x != nil {
		return x.Reschedule
	}
	return nil
}

func (x *Instance) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Instance) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Instance) GetDnsSuffix() string {
	if x != nil {
		return x.DnsSuffix
	}
	return ""
}

func (x *Instance) GetDeploymentID() string {
	if x != nil {
		return x.DeploymentID
	}
	return ""
}

func (x *Instance) GetMounts() []*Instance_Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

type Evaluation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the evaluation
	Id           string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status       Evaluation_Status  `protobuf:"varint,2,opt,name=status,proto3,enum=proto.Evaluation_Status" json:"status,omitempty"`
	TriggeredBy  Evaluation_Trigger `protobuf:"varint,3,opt,name=triggeredBy,proto3,enum=proto.Evaluation_Trigger" json:"triggeredBy,omitempty"`
	DeploymentID string             `protobuf:"bytes,4,opt,name=deploymentID,proto3" json:"deploymentID,omitempty"`
	Type         string             `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Sequence     int64              `protobuf:"varint,6,opt,name=sequence,proto3" json:"sequence,omitempty"`
	ComponentID  string             `protobuf:"bytes,7,opt,name=componentID,proto3" json:"componentID,omitempty"`
	InstanceID   string             `protobuf:"bytes,8,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
}

func (x *Evaluation) Reset() {
	*x = Evaluation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Evaluation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evaluation) ProtoMessage() {}

func (x *Evaluation) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evaluation.ProtoReflect.Descriptor instead.
func (*Evaluation) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{19}
}

func (x *Evaluation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Evaluation) GetStatus() Evaluation_Status {
	if x != nil {
		return x.Status
	}
	return Evaluation_PENDING
}

func (x *Evaluation) GetTriggeredBy() Evaluation_Trigger {
	if x != nil {
		return x.TriggeredBy
	}
	return Evaluation_UNKNOWN
}

func (x *Evaluation) GetDeploymentID() string {
	if x != nil {
		return x.DeploymentID
	}
	return ""
}

func (x *Evaluation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Evaluation) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Evaluation) GetComponentID() string {
	if x != nil {
		return x.ComponentID
	}
	return ""
}

func (x *Evaluation) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvalID    string               `protobuf:"bytes,1,opt,name=evalID,proto3" json:"evalID,omitempty"`
	Message   string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details   map[string]string    `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{20}
}

func (x *Event) GetEvalID() string {
	if x != nil {
		return x.EvalID
	}
	return ""
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Event) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Event) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ClusterSpec_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Params    *Spec  `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	Resources *Spec  `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	Storage   *Spec  `protobuf:"bytes,6,opt,name=storage,proto3" json:"storage,omitempty"`
	Version   string `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ClusterSpec_Group) Reset() {
	*x = ClusterSpec_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSpec_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec_Group) ProtoMessage() {}

func (x *ClusterSpec_Group) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSpec_Group.ProtoReflect.Descriptor instead.
func (*ClusterSpec_Group) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ClusterSpec_Group) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ClusterSpec_Group) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ClusterSpec_Group) GetParams() *Spec {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ClusterSpec_Group) GetResources() *Spec {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ClusterSpec_Group) GetStorage() *Spec {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *ClusterSpec_Group) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Spec_Literal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Spec_Literal) Reset() {
	*x = Spec_Literal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec_Literal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec_Literal) ProtoMessage() {}

func (x *Spec_Literal) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec_Literal.ProtoReflect.Descriptor instead.
func (*Spec_Literal) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Spec_Literal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Spec_Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attrs map[string]*Spec `protobuf:"bytes,1,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Spec_Block) Reset() {
	*x = Spec_Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec_Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec_Block) ProtoMessage() {}

func (x *Spec_Block) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec_Block.ProtoReflect.Descriptor instead.
func (*Spec_Block) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{13, 1}
}

func (x *Spec_Block) GetAttrs() map[string]*Spec {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type Spec_Array struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*Spec `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Spec_Array) Reset() {
	*x = Spec_Array{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec_Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec_Array) ProtoMessage() {}

func (x *Spec_Array) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec_Array.ProtoReflect.Descriptor instead.
func (*Spec_Array) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{13, 2}
}

func (x *Spec_Array) GetValues() []*Spec {
	if x != nil {
		return x.Values
	}
	return nil
}

type NodeSpec_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *NodeSpec_File) Reset() {
	*x = NodeSpec_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSpec_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSpec_File) ProtoMessage() {}

func (x *NodeSpec_File) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSpec_File.ProtoReflect.Descriptor instead.
func (*NodeSpec_File) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{14, 1}
}

func (x *NodeSpec_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeSpec_File) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type InstanceUpdate_Healthy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceUpdate_Healthy) Reset() {
	*x = InstanceUpdate_Healthy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceUpdate_Healthy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceUpdate_Healthy) ProtoMessage() {}

func (x *InstanceUpdate_Healthy) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceUpdate_Healthy.ProtoReflect.Descriptor instead.
func (*InstanceUpdate_Healthy) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{16, 0}
}

type InstanceUpdate_Scheduled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceUpdate_Scheduled) Reset() {
	*x = InstanceUpdate_Scheduled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceUpdate_Scheduled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceUpdate_Scheduled) ProtoMessage() {}

func (x *InstanceUpdate_Scheduled) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceUpdate_Scheduled.ProtoReflect.Descriptor instead.
func (*InstanceUpdate_Scheduled) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{16, 1}
}

type InstanceUpdate_Failed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceUpdate_Failed) Reset() {
	*x = InstanceUpdate_Failed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceUpdate_Failed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceUpdate_Failed) ProtoMessage() {}

func (x *InstanceUpdate_Failed) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceUpdate_Failed.ProtoReflect.Descriptor instead.
func (*InstanceUpdate_Failed) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{16, 2}
}

type InstanceUpdate_Killing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceUpdate_Killing) Reset() {
	*x = InstanceUpdate_Killing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceUpdate_Killing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceUpdate_Killing) ProtoMessage() {}

func (x *InstanceUpdate_Killing) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceUpdate_Killing.ProtoReflect.Descriptor instead.
func (*InstanceUpdate_Killing) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{16, 3}
}

type InstanceUpdate_Running struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip      string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Handler string `protobuf:"bytes,2,opt,name=handler,proto3" json:"handler,omitempty"`
}

func (x *InstanceUpdate_Running) Reset() {
	*x = InstanceUpdate_Running{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceUpdate_Running) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceUpdate_Running) ProtoMessage() {}

func (x *InstanceUpdate_Running) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceUpdate_Running.ProtoReflect.Descriptor instead.
func (*InstanceUpdate_Running) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{16, 4}
}

func (x *InstanceUpdate_Running) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *InstanceUpdate_Running) GetHandler() string {
	if x != nil {
		return x.Handler
	}
	return ""
}

type Instance_Reschedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attempts int64 `protobuf:"varint,3,opt,name=attempts,proto3" json:"attempts,omitempty"`
}

func (x *Instance_Reschedule) Reset() {
	*x = Instance_Reschedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance_Reschedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance_Reschedule) ProtoMessage() {}

func (x *Instance_Reschedule) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance_Reschedule.ProtoReflect.Descriptor instead.
func (*Instance_Reschedule) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{18, 1}
}

func (x *Instance_Reschedule) GetAttempts() int64 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

type Instance_Mount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Instance_Mount) Reset() {
	*x = Instance_Mount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance_Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance_Mount) ProtoMessage() {}

func (x *Instance_Mount) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance_Mount.ProtoReflect.Descriptor instead.
func (*Instance_Mount) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{18, 2}
}

func (x *Instance_Mount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Instance_Mount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instance_Mount) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_operator_proto_structs_proto protoreflect.FileDescriptor

var file_operator_proto_structs_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x11,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x14,
	0x0a, 0x12, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x22, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x42, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xa8,
	0x04, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x55, 0x45, 0x55, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x06, 0x22, 0x20, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x22, 0xf2, 0x02, 0x0a, 0x0b, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x1a, 0xc2, 0x01, 0x0a, 0x05, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x69,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xf5, 0x02, 0x0a, 0x04, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x34, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x07, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x72, 0x72, 0x61, 0x79, 0x1a, 0x1f, 0x0a, 0x07, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x82, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x32, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x1a, 0x45, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x2c, 0x0a, 0x05, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x12, 0x23, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0xf6, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2a,
	0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x45, 0x6e, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x1a, 0x36, 0x0a, 0x08,
	0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x34, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x0a, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x70,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xd7, 0x03, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x39, 0x0a, 0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x06,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x48, 0x00, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x1a,
	0x09, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x1a, 0x0b, 0x0a, 0x09, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x1a, 0x08, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x1a, 0x09, 0x0a, 0x07, 0x4b, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x33, 0x0a, 0x07,
	0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x04, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x6e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x22, 0xac, 0x07, 0x0a, 0x08, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x27, 0x0a, 0x02, 0x4b, 0x56,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4b, 0x56, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x02, 0x4b, 0x56, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x61,
	0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x72, 0x65, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x06, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x35, 0x0a, 0x07, 0x4b, 0x56, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x28,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x1a, 0x3f, 0x0a, 0x05, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x6d, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x07, 0x22, 0x99, 0x03, 0x0a, 0x0a, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x65, 0x64, 0x42, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0x36, 0x0a, 0x07,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x50, 0x45, 0x43, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x44, 0x45, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x10, 0x02, 0x22, 0xe4, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x76, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x76, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a,
	0x3a, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xc2, 0x01, 0x0a, 0x0f,
	0x45, 0x6e, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2b, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x32, 0xb4, 0x02, 0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x42, 0x11, 0x5a, 0x0f, 0x2f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_operator_proto_structs_proto_rawDescOnce sync.Once
	file_operator_proto_structs_proto_rawDescData = file_operator_proto_structs_proto_rawDesc
)

func file_operator_proto_structs_proto_rawDescGZIP() []byte {
	file_operator_proto_structs_proto_rawDescOnce.Do(func() {
		file_operator_proto_structs_proto_rawDescData = protoimpl.X.CompressGZIP(file_operator_proto_structs_proto_rawDescData)
	})
	return file_operator_proto_structs_proto_rawDescData
}

var file_operator_proto_structs_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_operator_proto_structs_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_operator_proto_structs_proto_goTypes = []interface{}{
	(Component_Status)(0),            // 0: proto.Component.Status
	(Component_Action)(0),            // 1: proto.Component.Action
	(Instance_Status)(0),             // 2: proto.Instance.Status
	(Evaluation_Status)(0),           // 3: proto.Evaluation.Status
	(Evaluation_Trigger)(0),          // 4: proto.Evaluation.Trigger
	(*ListDeploymentsResp)(nil),      // 5: proto.ListDeploymentsResp
	(*GetDeploymentReq)(nil),         // 6: proto.GetDeploymentReq
	(*GetDeploymentByIDReq)(nil),     // 7: proto.GetDeploymentByIDReq
	(*GetDeploymentByIDResp)(nil),    // 8: proto.GetDeploymentByIDResp
	(*UpsertInstanceReq)(nil),        // 9: proto.UpsertInstanceReq
	(*UpsertInstanceResp)(nil),       // 10: proto.UpsertInstanceResp
	(*GetInstanceReq)(nil),           // 11: proto.GetInstanceReq
	(*GetInstanceResp)(nil),          // 12: proto.GetInstanceResp
	(*GetInstanceUpdatesResp)(nil),   // 13: proto.GetInstanceUpdatesResp
	(*Task)(nil),                     // 14: proto.Task
	(*Component)(nil),                // 15: proto.Component
	(*ClusterSpec)(nil),              // 16: proto.ClusterSpec
	(*ResourceSpec)(nil),             // 17: proto.ResourceSpec
	(*Spec)(nil),                     // 18: proto.Spec
	(*NodeSpec)(nil),                 // 19: proto.NodeSpec
	(*Deployment)(nil),               // 20: proto.Deployment
	(*InstanceUpdate)(nil),           // 21: proto.InstanceUpdate
	(*Plan)(nil),                     // 22: proto.Plan
	(*Instance)(nil),                 // 23: proto.Instance
	(*Evaluation)(nil),               // 24: proto.Evaluation
	(*Event)(nil),                    // 25: proto.Event
	nil,                              // 26: proto.Component.MetadataEntry
	(*ClusterSpec_Group)(nil),        // 27: proto.ClusterSpec.Group
	(*Spec_Literal)(nil),             // 28: proto.Spec.Literal
	(*Spec_Block)(nil),               // 29: proto.Spec.Block
	(*Spec_Array)(nil),               // 30: proto.Spec.Array
	nil,                              // 31: proto.Spec.Block.AttrsEntry
	nil,                              // 32: proto.NodeSpec.EnvEntry
	(*NodeSpec_File)(nil),            // 33: proto.NodeSpec.File
	(*InstanceUpdate_Healthy)(nil),   // 34: proto.InstanceUpdate.Healthy
	(*InstanceUpdate_Scheduled)(nil), // 35: proto.InstanceUpdate.Scheduled
	(*InstanceUpdate_Failed)(nil),    // 36: proto.InstanceUpdate.Failed
	(*InstanceUpdate_Killing)(nil),   // 37: proto.InstanceUpdate.Killing
	(*InstanceUpdate_Running)(nil),   // 38: proto.InstanceUpdate.Running
	nil,                              // 39: proto.Instance.KVEntry
	(*Instance_Reschedule)(nil),      // 40: proto.Instance.Reschedule
	(*Instance_Mount)(nil),           // 41: proto.Instance.Mount
	nil,                              // 42: proto.Event.DetailsEntry
	(*any.Any)(nil),                  // 43: google.protobuf.Any
	(*timestamp.Timestamp)(nil),      // 44: google.protobuf.Timestamp
	(*empty.Empty)(nil),              // 45: google.protobuf.Empty
}
var file_operator_proto_structs_proto_depIdxs = []int32{
	20, // 0: proto.ListDeploymentsResp.deployments:type_name -> proto.Deployment
	20, // 1: proto.GetDeploymentByIDResp.deployment:type_name -> proto.Deployment
	23, // 2: proto.UpsertInstanceReq.instance:type_name -> proto.Instance
	23, // 3: proto.GetInstanceResp.instance:type_name -> proto.Instance
	43, // 4: proto.Component.spec:type_name -> google.protobuf.Any
	0,  // 5: proto.Component.status:type_name -> proto.Component.Status
	1,  // 6: proto.Component.action:type_name -> proto.Component.Action
	44, // 7: proto.Component.Timestamp:type_name -> google.protobuf.Timestamp
	26, // 8: proto.Component.metadata:type_name -> proto.Component.MetadataEntry
	27, // 9: proto.ClusterSpec.groups:type_name -> proto.ClusterSpec.Group
	18, // 10: proto.ResourceSpec.params:type_name -> proto.Spec
	29, // 11: proto.Spec.block_value:type_name -> proto.Spec.Block
	28, // 12: proto.Spec.literal:type_name -> proto.Spec.Literal
	30, // 13: proto.Spec.array:type_name -> proto.Spec.Array
	32, // 14: proto.NodeSpec.env:type_name -> proto.NodeSpec.EnvEntry
	33, // 15: proto.NodeSpec.files:type_name -> proto.NodeSpec.File
	23, // 16: proto.Deployment.instances:type_name -> proto.Instance
	35, // 17: proto.InstanceUpdate.scheduled:type_name -> proto.InstanceUpdate.Scheduled
	38, // 18: proto.InstanceUpdate.running:type_name -> proto.InstanceUpdate.Running
	37, // 19: proto.InstanceUpdate.killing:type_name -> proto.InstanceUpdate.Killing
	36, // 20: proto.InstanceUpdate.failed:type_name -> proto.InstanceUpdate.Failed
	34, // 21: proto.InstanceUpdate.healthy:type_name -> proto.InstanceUpdate.Healthy
	16, // 22: proto.Plan.cluster:type_name -> proto.ClusterSpec
	20, // 23: proto.Plan.deployment:type_name -> proto.Deployment
	23, // 24: proto.Plan.nodeUpdate:type_name -> proto.Instance
	27, // 25: proto.Instance.group:type_name -> proto.ClusterSpec.Group
	39, // 26: proto.Instance.KV:type_name -> proto.Instance.KVEntry
	19, // 27: proto.Instance.spec:type_name -> proto.NodeSpec
	2,  // 28: proto.Instance.status:type_name -> proto.Instance.Status
	40, // 29: proto.Instance.reschedule:type_name -> proto.Instance.Reschedule
	41, // 30: proto.Instance.mounts:type_name -> proto.Instance.Mount
	3,  // 31: proto.Evaluation.status:type_name -> proto.Evaluation.Status
	4,  // 32: proto.Evaluation.triggeredBy:type_name -> proto.Evaluation.Trigger
	42, // 33: proto.Event.details:type_name -> proto.Event.DetailsEntry
	44, // 34: proto.Event.timestamp:type_name -> google.protobuf.Timestamp
	18, // 35: proto.ClusterSpec.Group.params:type_name -> proto.Spec
	18, // 36: proto.ClusterSpec.Group.resources:type_name -> proto.Spec
	18, // 37: proto.ClusterSpec.Group.storage:type_name -> proto.Spec
	31, // 38: proto.Spec.Block.attrs:type_name -> proto.Spec.Block.AttrsEntry
	18, // 39: proto.Spec.Array.values:type_name -> proto.Spec
	18, // 40: proto.Spec.Block.AttrsEntry.value:type_name -> proto.Spec
	15, // 41: proto.EnsembleService.Apply:input_type -> proto.Component
	45, // 42: proto.EnsembleService.ListDeployments:input_type -> google.protobuf.Empty
	6,  // 43: proto.EnsembleService.GetDeployment:input_type -> proto.GetDeploymentReq
	9,  // 44: proto.BackendService.UpsertInstance:input_type -> proto.UpsertInstanceReq
	11, // 45: proto.BackendService.GetInstance:input_type -> proto.GetInstanceReq
	45, // 46: proto.BackendService.GetInstanceUpdates:input_type -> google.protobuf.Empty
	7,  // 47: proto.BackendService.GetDeploymentByID:input_type -> proto.GetDeploymentByIDReq
	15, // 48: proto.EnsembleService.Apply:output_type -> proto.Component
	5,  // 49: proto.EnsembleService.ListDeployments:output_type -> proto.ListDeploymentsResp
	20, // 50: proto.EnsembleService.GetDeployment:output_type -> proto.Deployment
	10, // 51: proto.BackendService.UpsertInstance:output_type -> proto.UpsertInstanceResp
	12, // 52: proto.BackendService.GetInstance:output_type -> proto.GetInstanceResp
	13, // 53: proto.BackendService.GetInstanceUpdates:output_type -> proto.GetInstanceUpdatesResp
	8,  // 54: proto.BackendService.GetDeploymentByID:output_type -> proto.GetDeploymentByIDResp
	48, // [48:55] is the sub-list for method output_type
	41, // [41:48] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_operator_proto_structs_proto_init() }
func file_operator_proto_structs_proto_init() {
	if File_operator_proto_structs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_operator_proto_structs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeploymentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertInstanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceUpdatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Evaluation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSpec_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec_Literal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec_Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec_Array); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSpec_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceUpdate_Healthy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceUpdate_Scheduled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceUpdate_Failed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceUpdate_Killing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceUpdate_Running); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance_Reschedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance_Mount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_operator_proto_structs_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Spec_BlockValue)(nil),
		(*Spec_Literal_)(nil),
		(*Spec_Array_)(nil),
	}
	file_operator_proto_structs_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*InstanceUpdate_Scheduled_)(nil),
		(*InstanceUpdate_Running_)(nil),
		(*InstanceUpdate_Killing_)(nil),
		(*InstanceUpdate_Failed_)(nil),
		(*InstanceUpdate_Healthy_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_operator_proto_structs_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_operator_proto_structs_proto_goTypes,
		DependencyIndexes: file_operator_proto_structs_proto_depIdxs,
		EnumInfos:         file_operator_proto_structs_proto_enumTypes,
		MessageInfos:      file_operator_proto_structs_proto_msgTypes,
	}.Build()
	File_operator_proto_structs_proto = out.File
	file_operator_proto_structs_proto_rawDesc = nil
	file_operator_proto_structs_proto_goTypes = nil
	file_operator_proto_structs_proto_depIdxs = nil
}
