// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: operator/proto/structs.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Component_Status int32

const (
	Component_UNKNOWN  Component_Status = 0
	Component_PENDING  Component_Status = 1
	Component_QUEUED   Component_Status = 2
	Component_FAILED   Component_Status = 3
	Component_APPLIED  Component_Status = 4
	Component_CANCELED Component_Status = 5
)

// Enum value maps for Component_Status.
var (
	Component_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "QUEUED",
		3: "FAILED",
		4: "APPLIED",
		5: "CANCELED",
	}
	Component_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"PENDING":  1,
		"QUEUED":   2,
		"FAILED":   3,
		"APPLIED":  4,
		"CANCELED": 5,
	}
)

func (x Component_Status) Enum() *Component_Status {
	p := new(Component_Status)
	*p = x
	return p
}

func (x Component_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Component_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_structs_proto_enumTypes[0].Descriptor()
}

func (Component_Status) Type() protoreflect.EnumType {
	return &file_operator_proto_structs_proto_enumTypes[0]
}

func (x Component_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Component_Status.Descriptor instead.
func (Component_Status) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{1, 0}
}

type Component_Action int32

const (
	Component_NONE   Component_Action = 0
	Component_CREATE Component_Action = 1
	Component_DELETE Component_Action = 2
)

// Enum value maps for Component_Action.
var (
	Component_Action_name = map[int32]string{
		0: "NONE",
		1: "CREATE",
		2: "DELETE",
	}
	Component_Action_value = map[string]int32{
		"NONE":   0,
		"CREATE": 1,
		"DELETE": 2,
	}
)

func (x Component_Action) Enum() *Component_Action {
	p := new(Component_Action)
	*p = x
	return p
}

func (x Component_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Component_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_structs_proto_enumTypes[1].Descriptor()
}

func (Component_Action) Type() protoreflect.EnumType {
	return &file_operator_proto_structs_proto_enumTypes[1]
}

func (x Component_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Component_Action.Descriptor instead.
func (Component_Action) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{1, 1}
}

type Node_NodeState int32

const (
	Node_UNKNOWN     Node_NodeState = 0
	Node_INITIALIZED Node_NodeState = 1
	Node_PENDING     Node_NodeState = 2
	Node_RUNNING     Node_NodeState = 3
	Node_TAINTED     Node_NodeState = 4
	Node_DOWN        Node_NodeState = 5
)

// Enum value maps for Node_NodeState.
var (
	Node_NodeState_name = map[int32]string{
		0: "UNKNOWN",
		1: "INITIALIZED",
		2: "PENDING",
		3: "RUNNING",
		4: "TAINTED",
		5: "DOWN",
	}
	Node_NodeState_value = map[string]int32{
		"UNKNOWN":     0,
		"INITIALIZED": 1,
		"PENDING":     2,
		"RUNNING":     3,
		"TAINTED":     4,
		"DOWN":        5,
	}
)

func (x Node_NodeState) Enum() *Node_NodeState {
	p := new(Node_NodeState)
	*p = x
	return p
}

func (x Node_NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Node_NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_structs_proto_enumTypes[2].Descriptor()
}

func (Node_NodeState) Type() protoreflect.EnumType {
	return &file_operator_proto_structs_proto_enumTypes[2]
}

func (x Node_NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Node_NodeState.Descriptor instead.
func (Node_NodeState) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{5, 0}
}

type ComponentTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old *Component `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New *Component `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *ComponentTask) Reset() {
	*x = ComponentTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentTask) ProtoMessage() {}

func (x *ComponentTask) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentTask.ProtoReflect.Descriptor instead.
func (*ComponentTask) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{0}
}

func (x *ComponentTask) GetOld() *Component {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *ComponentTask) GetNew() *Component {
	if x != nil {
		return x.New
	}
	return nil
}

// Component is like a snapshot or something. AKA Evaluation
type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the component
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name is the name of the component
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// spec of the stuff being applied
	Spec *any.Any `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	// generation of the component
	Sequence int64 `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// status of the component
	Status Component_Status `protobuf:"varint,5,opt,name=status,proto3,enum=proto.Component_Status" json:"status,omitempty"`
	// Type of action
	Action Component_Action `protobuf:"varint,6,opt,name=action,proto3,enum=proto.Component_Action" json:"action,omitempty"`
	// timestamp
	Timestamp *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	// metadata of the component
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{1}
}

func (x *Component) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Component) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Component) GetSpec() *any.Any {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Component) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Component) GetStatus() Component_Status {
	if x != nil {
		return x.Status
	}
	return Component_UNKNOWN
}

func (x *Component) GetAction() Component_Action {
	if x != nil {
		return x.Action
	}
	return Component_NONE
}

func (x *Component) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Component) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Description of the cluster
type ClusterSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the backend
	Backend string `protobuf:"bytes,2,opt,name=backend,proto3" json:"backend,omitempty"`
	// version of the backend (RESERVED)
	Version string             `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Sets    []*ClusterSpec_Set `protobuf:"bytes,4,rep,name=sets,proto3" json:"sets,omitempty"`
}

func (x *ClusterSpec) Reset() {
	*x = ClusterSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec) ProtoMessage() {}

func (x *ClusterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSpec.ProtoReflect.Descriptor instead.
func (*ClusterSpec) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{2}
}

func (x *ClusterSpec) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *ClusterSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ClusterSpec) GetSets() []*ClusterSpec_Set {
	if x != nil {
		return x.Sets
	}
	return nil
}

// Description of the resource
type ResourceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the cluster
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// name of the resource in the backend
	Resource string `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	// params are the params to configure the resource (in JSON)
	Params string `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *ResourceSpec) Reset() {
	*x = ResourceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSpec) ProtoMessage() {}

func (x *ResourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSpec.ProtoReflect.Descriptor instead.
func (*ResourceSpec) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceSpec) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ResourceSpec) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ResourceSpec) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type NodeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State Node_NodeState `protobuf:"varint,2,opt,name=state,proto3,enum=proto.Node_NodeState" json:"state,omitempty"`
}

func (x *NodeUpdate) Reset() {
	*x = NodeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeUpdate) ProtoMessage() {}

func (x *NodeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeUpdate.ProtoReflect.Descriptor instead.
func (*NodeUpdate) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{4}
}

func (x *NodeUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeUpdate) GetState() Node_NodeState {
	if x != nil {
		return x.State
	}
	return Node_UNKNOWN
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Addr      string            `protobuf:"bytes,2,opt,name=Addr,proto3" json:"Addr,omitempty"`
	Handle    string            `protobuf:"bytes,3,opt,name=Handle,proto3" json:"Handle,omitempty"`
	Namespace string            `protobuf:"bytes,4,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Nodeset   string            `protobuf:"bytes,5,opt,name=Nodeset,proto3" json:"Nodeset,omitempty"`
	Nodetype  string            `protobuf:"bytes,6,opt,name=Nodetype,proto3" json:"Nodetype,omitempty"`
	State     Node_NodeState    `protobuf:"varint,7,opt,name=State,proto3,enum=proto.Node_NodeState" json:"State,omitempty"`
	Cluster   string            `protobuf:"bytes,8,opt,name=Cluster,proto3" json:"Cluster,omitempty"`
	Spec      *Node_NodeSpec    `protobuf:"bytes,9,opt,name=Spec,proto3" json:"Spec,omitempty"`
	KV        map[string]string `protobuf:"bytes,10,rep,name=KV,proto3" json:"KV,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mounts    []*Node_Mount     `protobuf:"bytes,11,rep,name=Mounts,proto3" json:"Mounts,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{5}
}

func (x *Node) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Node) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Node) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *Node) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Node) GetNodeset() string {
	if x != nil {
		return x.Nodeset
	}
	return ""
}

func (x *Node) GetNodetype() string {
	if x != nil {
		return x.Nodetype
	}
	return ""
}

func (x *Node) GetState() Node_NodeState {
	if x != nil {
		return x.State
	}
	return Node_UNKNOWN
}

func (x *Node) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Node) GetSpec() *Node_NodeSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Node) GetKV() map[string]string {
	if x != nil {
		return x.KV
	}
	return nil
}

func (x *Node) GetMounts() []*Node_Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

// Instance of a cluster
type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the cluster
	Name      string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string  `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Backend   string  `protobuf:"bytes,3,opt,name=backend,proto3" json:"backend,omitempty"`
	Nodes     []*Node `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{6}
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Cluster) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *Cluster) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bootstrap bool        `protobuf:"varint,1,opt,name=Bootstrap,proto3" json:"Bootstrap,omitempty"`
	Sets      []*Plan_Set `protobuf:"bytes,2,rep,name=sets,proto3" json:"sets,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{7}
}

func (x *Plan) GetBootstrap() bool {
	if x != nil {
		return x.Bootstrap
	}
	return false
}

func (x *Plan) GetSets() []*Plan_Set {
	if x != nil {
		return x.Sets
	}
	return nil
}

type ClusterSpec_Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Replicas int64  `protobuf:"varint,2,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ClusterSpec_Set) Reset() {
	*x = ClusterSpec_Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSpec_Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec_Set) ProtoMessage() {}

func (x *ClusterSpec_Set) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSpec_Set.ProtoReflect.Descriptor instead.
func (*ClusterSpec_Set) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ClusterSpec_Set) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClusterSpec_Set) GetReplicas() int64 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *ClusterSpec_Set) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Node_NodeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env     map[string]string `protobuf:"bytes,1,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Files   map[string]string `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Image   string            `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Version string            `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Cmd     []string          `protobuf:"bytes,5,rep,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *Node_NodeSpec) Reset() {
	*x = Node_NodeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_NodeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_NodeSpec) ProtoMessage() {}

func (x *Node_NodeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_NodeSpec.ProtoReflect.Descriptor instead.
func (*Node_NodeSpec) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Node_NodeSpec) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Node_NodeSpec) GetFiles() map[string]string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Node_NodeSpec) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Node_NodeSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Node_NodeSpec) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

type Node_Mount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Node_Mount) Reset() {
	*x = Node_Mount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node_Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node_Mount) ProtoMessage() {}

func (x *Node_Mount) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node_Mount.ProtoReflect.Descriptor instead.
func (*Node_Mount) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{5, 2}
}

func (x *Node_Mount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node_Mount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node_Mount) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Plan_Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AddNodes    []*Node  `protobuf:"bytes,2,rep,name=AddNodes,proto3" json:"AddNodes,omitempty"`
	DelNodesNum int64    `protobuf:"varint,3,opt,name=DelNodesNum,proto3" json:"DelNodesNum,omitempty"`
	DelNodes    []string `protobuf:"bytes,4,rep,name=DelNodes,proto3" json:"DelNodes,omitempty"`
	UpdateNodes []string `protobuf:"bytes,5,rep,name=UpdateNodes,proto3" json:"UpdateNodes,omitempty"`
}

func (x *Plan_Set) Reset() {
	*x = Plan_Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_structs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan_Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan_Set) ProtoMessage() {}

func (x *Plan_Set) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_structs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan_Set.ProtoReflect.Descriptor instead.
func (*Plan_Set) Descriptor() ([]byte, []int) {
	return file_operator_proto_structs_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Plan_Set) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plan_Set) GetAddNodes() []*Node {
	if x != nil {
		return x.AddNodes
	}
	return nil
}

func (x *Plan_Set) GetDelNodesNum() int64 {
	if x != nil {
		return x.DelNodesNum
	}
	return 0
}

func (x *Plan_Set) GetDelNodes() []string {
	if x != nil {
		return x.DelNodes
	}
	return nil
}

func (x *Plan_Set) GetUpdateNodes() []string {
	if x != nil {
		return x.UpdateNodes
	}
	return nil
}

var File_operator_proto_structs_proto protoreflect.FileDescriptor

var file_operator_proto_structs_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x57, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x22, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x22, 0x8d, 0x04, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x51,
	0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x22, 0x2a,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0xb8, 0x01, 0x0a, 0x0b, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x04, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x53, 0x65, 0x74, 0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x49, 0x0a, 0x03, 0x53, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x49, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xd4,
	0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4e,
	0x6f, 0x64, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e,
	0x6f, 0x64, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x02, 0x4b, 0x56, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x2e, 0x4b, 0x56, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x4b, 0x56, 0x12, 0x29, 0x0a,
	0x06, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x06, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x35, 0x0a, 0x07, 0x4b, 0x56, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0xa6, 0x02, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2f, 0x0a, 0x03,
	0x65, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x35, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x05, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x5a, 0x0a, 0x09, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x54, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x05, 0x22, 0x78, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0xee, 0x01, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x42, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x1a, 0xa2, 0x01, 0x0a, 0x03,
	0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x44, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4e,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x32, 0x3e, 0x0a, 0x0f, 0x45, 0x6e, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x42, 0x11, 0x5a, 0x0f, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_operator_proto_structs_proto_rawDescOnce sync.Once
	file_operator_proto_structs_proto_rawDescData = file_operator_proto_structs_proto_rawDesc
)

func file_operator_proto_structs_proto_rawDescGZIP() []byte {
	file_operator_proto_structs_proto_rawDescOnce.Do(func() {
		file_operator_proto_structs_proto_rawDescData = protoimpl.X.CompressGZIP(file_operator_proto_structs_proto_rawDescData)
	})
	return file_operator_proto_structs_proto_rawDescData
}

var file_operator_proto_structs_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_operator_proto_structs_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_operator_proto_structs_proto_goTypes = []interface{}{
	(Component_Status)(0),       // 0: proto.Component.Status
	(Component_Action)(0),       // 1: proto.Component.Action
	(Node_NodeState)(0),         // 2: proto.Node.NodeState
	(*ComponentTask)(nil),       // 3: proto.ComponentTask
	(*Component)(nil),           // 4: proto.Component
	(*ClusterSpec)(nil),         // 5: proto.ClusterSpec
	(*ResourceSpec)(nil),        // 6: proto.ResourceSpec
	(*NodeUpdate)(nil),          // 7: proto.NodeUpdate
	(*Node)(nil),                // 8: proto.Node
	(*Cluster)(nil),             // 9: proto.Cluster
	(*Plan)(nil),                // 10: proto.Plan
	nil,                         // 11: proto.Component.MetadataEntry
	(*ClusterSpec_Set)(nil),     // 12: proto.ClusterSpec.Set
	nil,                         // 13: proto.Node.KVEntry
	(*Node_NodeSpec)(nil),       // 14: proto.Node.NodeSpec
	(*Node_Mount)(nil),          // 15: proto.Node.Mount
	nil,                         // 16: proto.Node.NodeSpec.EnvEntry
	nil,                         // 17: proto.Node.NodeSpec.FilesEntry
	(*Plan_Set)(nil),            // 18: proto.Plan.Set
	(*any.Any)(nil),             // 19: google.protobuf.Any
	(*timestamp.Timestamp)(nil), // 20: google.protobuf.Timestamp
}
var file_operator_proto_structs_proto_depIdxs = []int32{
	4,  // 0: proto.ComponentTask.old:type_name -> proto.Component
	4,  // 1: proto.ComponentTask.new:type_name -> proto.Component
	19, // 2: proto.Component.spec:type_name -> google.protobuf.Any
	0,  // 3: proto.Component.status:type_name -> proto.Component.Status
	1,  // 4: proto.Component.action:type_name -> proto.Component.Action
	20, // 5: proto.Component.Timestamp:type_name -> google.protobuf.Timestamp
	11, // 6: proto.Component.metadata:type_name -> proto.Component.MetadataEntry
	12, // 7: proto.ClusterSpec.sets:type_name -> proto.ClusterSpec.Set
	2,  // 8: proto.NodeUpdate.state:type_name -> proto.Node.NodeState
	2,  // 9: proto.Node.State:type_name -> proto.Node.NodeState
	14, // 10: proto.Node.Spec:type_name -> proto.Node.NodeSpec
	13, // 11: proto.Node.KV:type_name -> proto.Node.KVEntry
	15, // 12: proto.Node.Mounts:type_name -> proto.Node.Mount
	8,  // 13: proto.Cluster.nodes:type_name -> proto.Node
	18, // 14: proto.Plan.sets:type_name -> proto.Plan.Set
	16, // 15: proto.Node.NodeSpec.env:type_name -> proto.Node.NodeSpec.EnvEntry
	17, // 16: proto.Node.NodeSpec.files:type_name -> proto.Node.NodeSpec.FilesEntry
	8,  // 17: proto.Plan.Set.AddNodes:type_name -> proto.Node
	4,  // 18: proto.EnsembleService.Apply:input_type -> proto.Component
	4,  // 19: proto.EnsembleService.Apply:output_type -> proto.Component
	19, // [19:20] is the sub-list for method output_type
	18, // [18:19] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_operator_proto_structs_proto_init() }
func file_operator_proto_structs_proto_init() {
	if File_operator_proto_structs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_operator_proto_structs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSpec_Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_NodeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node_Mount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_structs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan_Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_operator_proto_structs_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_operator_proto_structs_proto_goTypes,
		DependencyIndexes: file_operator_proto_structs_proto_depIdxs,
		EnumInfos:         file_operator_proto_structs_proto_enumTypes,
		MessageInfos:      file_operator_proto_structs_proto_msgTypes,
	}.Build()
	File_operator_proto_structs_proto = out.File
	file_operator_proto_structs_proto_rawDesc = nil
	file_operator_proto_structs_proto_goTypes = nil
	file_operator_proto_structs_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EnsembleServiceClient is the client API for EnsembleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EnsembleServiceClient interface {
	Apply(ctx context.Context, in *Component, opts ...grpc.CallOption) (*Component, error)
}

type ensembleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEnsembleServiceClient(cc grpc.ClientConnInterface) EnsembleServiceClient {
	return &ensembleServiceClient{cc}
}

func (c *ensembleServiceClient) Apply(ctx context.Context, in *Component, opts ...grpc.CallOption) (*Component, error) {
	out := new(Component)
	err := c.cc.Invoke(ctx, "/proto.EnsembleService/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnsembleServiceServer is the server API for EnsembleService service.
type EnsembleServiceServer interface {
	Apply(context.Context, *Component) (*Component, error)
}

// UnimplementedEnsembleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEnsembleServiceServer struct {
}

func (*UnimplementedEnsembleServiceServer) Apply(context.Context, *Component) (*Component, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Apply not implemented")
}

func RegisterEnsembleServiceServer(s *grpc.Server, srv EnsembleServiceServer) {
	s.RegisterService(&_EnsembleService_serviceDesc, srv)
}

func _EnsembleService_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Component)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsembleServiceServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EnsembleService/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsembleServiceServer).Apply(ctx, req.(*Component))
	}
	return interceptor(ctx, in, info, handler)
}

var _EnsembleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EnsembleService",
	HandlerType: (*EnsembleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _EnsembleService_Apply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "operator/proto/structs.proto",
}
